<!-- Classe Task pour les tâches -->
<?php
class Task
	{
		private $id = 0;
		private $nom;
		private $process;
		private $fichier;
		private $hour;
		private $day;
		private $action;
		private $team;
		private $ferie;
		private $deleted;
		

		public function getID()
		{
			return $this->id;
		}
		
		public function getNom()
		{
			return $this->nom;
		}

		public function getProcess()
		{
			return $this->process;
		}
		
		public function getFile()
		{
			return $this->fichier;
		}
		
		public function getHour()
		{
			return $this->hour;
		}
		
		public function getDay()
		{
			return $this->day;
		}
		
		public function getAction()
		{
			return $this->action;
		}
		
		public function getTeam()
		{
			return $this->team;
		}	
		
		public function getFerie()
		{
			return $this->ferie;
		}
		
		public function getDeleted()
		{
			return $this->deleted;
		}
		
		#Constructeur de la classe Task
		public function Task($nom,$process,$file,$hour,$day,$action,$team,$ferie,$deleted)
		{
			$this->nom=$nom;
			$this->process=$process;
			$this->fichier=$file;
			$this->hour=$hour;
			$this->day=$day;
			$this->action=$action;
			$this->team=$team;
			$this->ferie=$ferie;
			$this->deleted=$deleted;
		}
		#Methode pour l'ajout de tâche avec en paramètre l'objet PDO Mysql
		public function AddTask($bdd)
		{
			$result = $bdd->prepare("INSERT INTO scheduled_tasks (Task_Name, Task_Process, Task_File, Task_Hour, Task_Day, Task_Action, Task_EquipeID, Task_PublicHoliday, Deleted) VALUES (?,?,?,?,?,?,?,?,?)");
			$result->execute(array($this->nom, $this->process, $this->fichier,$this->hour, $this->day, $this->action, $this->team, $this->ferie, $this->deleted));
		}
		#Methode pour l'édition de tâche avec en paramètre l'objet PDO Mysql
		public function EditTask($bdd)
		{
			$edit = $bdd->prepare("UPDATE scheduled_tasks SET Task_Name = ?, Task_Process = ?, Task_File = ?, Task_Hour = ?, Task_Day = ?, Task_Action = ?, Task_EquipeID = ?, Task_PublicHoliday = ? WHERE Task_ID = ?");
			$edit->execute(array($this->nom,$this->process, $this->fichier, $this->hour, $this->day, $this->action, $this->action, $this->team, $this->ferie, $this->id));
		}		
		#Methode pour la recherche de tâche avec en paramètre l'objet PDO Mysql et l'ID de la tâche
		public function GetTask($bdd)
		{
			$get = $bdd->query("SELECT * FROM scheduled_tasks WHERE User_Login ='".$this->id."'");
			$get->execute();
			while ($donnees=$result->fetch())
			{
				$this->nom = $donnees['Task_Name'];
				$this->process = $donnees['Task_Process'];
				$this->fichier = $donnees['Task_File'];
				$this->hour = $donnees['Task_Hour'];
				$this->day = $donnees['Task_Day'];
				$this->action = $donnees['Task_Action'];
				$this->team = $donnees['Task_EquipeID'];
				$this->ferie = $donnees['Task_PublicHoliday'];
				$this->deleted = $donnees['Deleted'];
			}
		}
		#Methode pour la suppression de tâche avec en paramètre l'objet PDO Mysql			
		public function DelTask($bdd)
		{			
			$del= $bdd->query("DELETE FROM scheduled_tasks WHERE Task_ID ='".$this->id."'");
			$del->execute();
		}
		
		#Destructeur pour la classe Task
		public function __destruct()
		{			
		}
	}
?>